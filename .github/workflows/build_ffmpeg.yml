name: Build FFmpeg
on:
  workflow_dispatch:
    inputs:
      mac_source_url:
        description: 'URL of FFmpeg source for MacOS build.'
        default: ''
        type: string
      linux_amd64_prebuild_url:
        description: 'URL of FFmpeg prebuilt for x86_64 Linux'
        default: ''
        type: string
      linux_arm64_prebuild_url:
        description: 'URL of FFmpeg prebuilt for arm64 Linux'
        default: ''
        type: string

jobs:
  check_version:
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Check Mac version
        id: mac-version
        run: ./validate_input_mac.sh '${{ inputs.mac_source_url }}'
        working-directory: ./scripts
        

  build_ffmpeg_macos:
    runs-on: macos-14
    if: inputs.mac_source_url != ''
    needs: check_version
    steps:
      - name: Install dependencies
        run: brew install libvpx

      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Download FFmpeg sources
        run: wget -O ffmpeg.tar.gz '${{ inputs.mac_source_url }}'

      - name: Unpack FFmpeg sources
        run: |
          mkdir -p ffmpeg
          tar -zxvf ffmpeg.tar.gz --strip-components=1 -C ./ffmpeg

      - name: Configure and build FFmpeg
        run: >
          ./configure
          --disable-gpl
          --disable-nonfree"
          --enable-shared
          --disable-static
          --disable-programs
          --disable-doc
          --enable-libvpx
          --disable-librtmp
        working-directory: ./ffmpeg

      - name: Build FFmpeg
        run: make -j$(sysctl -n hw.physicalcpu)
        working-directory: ./ffmpeg

        # Finds all built *.n.dylib files. If a found file is a symlink it copies
        # the file it points to under the symlink name
      - name: Extract dynamic libraries
        run: |
          mkdir -p lib
          find -LE ./ffmpeg -type f -iregex "^.*/lib[a-zA-Z/]+\.[0-9.]+dylib$" -exec cp {} ./lib \;
      
      - name: Change absolute dependency paths to relative
        run: ./change_deps.sh '${{ github.workspace }}'
        working-directory: ./scripts

      - name: Pack and compress libs
        run: tar -zcvf 'ffmpeg_n${{ steps.input-validation.outputs.FFMPEG_VERSION }}_macos_arm.tar.gz' lib

      - name: Upload tar
        uses: actions/upload-artifact@v4
        with:
          name: ffmpeg_n${{ steps.input-validation.outputs.FFMPEG_VERSION }}_macos_arm.tar.gz
          path: ffmpeg_n${{ steps.input-validation.outputs.FFMPEG_VERSION }}_macos_arm.tar.gz

  release_ffmpeg_prebuilds:
    runs-on: ubuntu-24.04
    permissions:
      contents: write
    steps:
